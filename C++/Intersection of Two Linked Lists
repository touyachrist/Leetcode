/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        int lenA = getlistLength(headA);
        int lenB = getlistLength(headB);
        
        if(lenA <= 0||lenB <= 0) return NULL;
        
        if(lenA < lenB){
            swap(headA, headB);
        }
        
        for(int i=0; i < abs(lenA-lenB); i++){
            headA = headA->next;
        }
        
        while(headA != headB){
            headA = headA->next;
            headB = headB->next;
        }
        return headA;
    }

private:
    int getlistLength(ListNode *head){
        int len=0;
        while(head != NULL){
            head = head->next;
            len++;
        }
        return len;
    }
};
